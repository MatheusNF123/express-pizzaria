version: "3"

services:
  node:
    image: node:16.14
    # Nome do container para facilitar execução
    container_name: pizzaria_backend
    # Caminho da Dockerfile
    build: ./
    # Mesmo que `docker run -t`
    tty: true
    # Mesmo que `docker run -i`
    stdin_open: true
    # Substitui o comando padrão da imagem do node
    command: bash
    # Restarta a imagem caso algo a faça parar
    restart: always
    # Diretório padrão de execução
    working_dir: /app
    # Lista de volumes (diretórios) mapeados de fora para dentro do container
    volumes:
      # Monta o diretório atual, com todos os dados do projeto,
      # dentro do diretório /app
      - ./:/app
    # Lista de serviços do qual este serviço depende
    depends_on:
      # Precisa do postgres funcionando antes de subir o node
      - postgresdb
    # Lista de portas mapeadas de dentro para fora do container
    # na notação porta_de_fora:porta_de_dentro
    ports:
      # Expõe a porta padrão da aplicação: altere aqui caso use outra porta
      - 3001:3001
    environment:
      # - MONGO_URI=mongodb://mongodb:27017/pizzaria
      - DB_HOST=localhost
      - DB_PORT=27017
      - DB_USER=admin
      - DB_PASS=pizzeriapassword
      - DB_NAME=pizzeria
      - PORT=3001
      - TYPEORM_MIGRATIONS=src/Database/Migrations/*ts
      - TYPEORM_MIGRATIONS_DIR=src/Database/Migrations

  # Serviço que irá rodar o postgresdb
  postgresdb:
    image: postgres:15.1
    container_name: pizzaria_db
    volumes:
      - ./:/app
    restart: always
    ports:
      - 27017:27017

    environment:
        POSTGRES_PASSWORD: pizzeriapassword
        POSTGRES_DB: pizzeria
# Lista de redes que os containeres irão utilizar
networks:
  # Rede padrão, criada automaticamente
  default:
    # Dá um nome específico à rede padrão
    name: pizzaria_net
# As chaves `tty`, `stdin_open` e `command` fazem com que o container fique
# rodando em segundo plano, bem como tornam possível o uso do comando
# `docker attach`, já deixando o terminal atual acoplado ao container, direto
# no bash. Apesar disso, utilizar o attach mais de uma vez irá replicar o
# terminal, portanto é melhor utilizar o comando `docker exec`.

# A renomeação da rede padrão é feita pois caso contrário o nome da rede será
# o nome do diretório onde o arquivo atual se encontra, o que pode dificultar
# a listagem individual.
